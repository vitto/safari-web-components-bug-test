@tailwind utilities;

/**
 * @prop --mds-dropdown-arrow-background: Sets the fill color of the arrow.
 * @prop --mds-dropdown-background: Sets the background-color of the dropdown.
 * @prop --mds-dropdown-backdrop-duration: Sets the transition duration of the backdrop, used by component's code too.
 * @prop --mds-dropdown-backdrop-z-indx: Sets the backdrop z-index, used by component's code too.
 * @prop --mds-dropdown-drop-shadow: Sets the drop-shadow of the dropdown.
 * @prop --mds-dropdown-mouseover-delay: Sets the delay duration of the component when the caller trigger mouseover event, it's used by the javascript code.
 * @prop --mds-dropdown-duration: Sets the duration of the dropdown animation.
 * @prop --mds-dropdown-ease: Sets the easing of the dropdown animation.
 * @prop --mds-dropdown-transform-from: Sets the from animation transform of the dropdown.
 * @prop --mds-dropdown-transform-to: Sets the to animation transform of the dropdown.
 * @prop --mds-dropdown-z-index: Sets the z-index of the component.
 */

:host {

  --mds-dropdown-arrow-background: var(--mds-dropdown-background);
  --mds-dropdown-backdrop-duration: 200ms;
  --mds-dropdown-backdrop-z-index: var(--magma-backdrop-z-index, 3000);
  --mds-dropdown-background: theme('colors.tone-neutral');
  --mds-dropdown-mouseover-delay: 0.5s;
  --mds-dropdown-drop-shadow-color: var(--tone-neutral-01, 0 0 0);
  --mds-dropdown-drop-shadow: drop-shadow(0 10px 8px rgb(var(--mds-dropdown-drop-shadow-color) / 0.05)) drop-shadow(0 4px 3px rgb(var(--mds-dropdown-drop-shadow-color) / 0.15)) drop-shadow(0 0 1px rgb(var(--mds-dropdown-drop-shadow-color) / 0.15));
  --mds-dropdown-duration: 0.5s;
  --mds-dropdown-ease: theme('transitionTimingFunction.out-expo');
  --mds-dropdown-transform-from: scale(0.9) translateY(-3%);
  --mds-dropdown-transform-to: scale(1) translate(0, 0);
  --mds-dropdown-z-index: var(--magma-dropdown-z-index, 4000);

  @apply
    gap-400
    opacity-0
    p-600
    rounded-lg;

  background-color: var(--mds-dropdown-background);
  box-sizing: border-box;
  display: none;
  filter: var(--mds-dropdown-drop-shadow);
  pointer-events: none;
  position: fixed;
  transform: var(--mds-dropdown-transform-from);
  transition-behavior: allow-discrete;
  transition-duration: var(--mds-dropdown-duration);
  transition-property: opacity, transform, transform-origin, display;
  transition-timing-function: var(--mds-dropdown-ease);
  z-index: var(--mds-dropdown-z-index);
}

:host( [visible]:not([visible="false"]) ) {
  @apply opacity-100;

  display: grid;
  pointer-events: auto;
  transform: var(--mds-dropdown-transform-to);

  @starting-style {
    opacity: 0;
    transform: scale(0);
  }
}

:host( [smooth]:not([smooth="false"]) ) {
  transition-property: bottom, left, opacity, right, top, transform, transform-origin;
}

.arrow {
  @apply -top-400;

  display: flex;
  fill: var(--mds-dropdown-arrow-background);
  pointer-events: none;
  position: fixed;
}

::slotted( * ) {
  @apply z-10;

  position: relative;
}

@import './css/mds-dropdown-pref-animation.css';
@import './css/mds-dropdown-pref-theme.css';
@import './css/mds-dropdown-pref-contrast.css';
@import '../../tailwind/fouc.css';
