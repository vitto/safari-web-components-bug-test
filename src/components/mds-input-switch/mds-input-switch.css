@import '~@maggioli-design-system/styles/dist/css/animations.css';
@import '../../tailwind/components.css';
@tailwind components;
@tailwind utilities;

/**
 * @prop --mds-input-switch-animation-timing-adjust: Set the size multiplier when the switch toggle is resizing by animation
 * @prop --mds-input-switch-animation-timing-function: Set the timing function of the animation
 * @prop --mds-input-switch-duration: Set the duration of the animation
 * @prop --mds-input-switch-icon-color-checked-disabled: Set the color of the icon when the switch is disabled and checked
 * @prop --mds-input-switch-icon-color-checked: Set the color of the icon when the switch is checked
 * @prop --mds-input-switch-icon-color-indeterminate-disabled: Set the color of the icon when the switch is disabled and indeterminate
 * @prop --mds-input-switch-icon-color-indeterminate: Set the color of the icon when the switch is indeterminate
 * @prop --mds-input-switch-icon-color-unchecked-disabled: Set the color of the icon when the switch is disabled and unchecked
 * @prop --mds-input-switch-icon-color-unchecked: Set the color of the icon when the switch is unchecked
 * @prop --mds-input-switch-box-color-checked: Set the color of the switch when the switch is checked
 * @prop --mds-input-switch-box-color-disabled-checked: Set the color of the switch when the switch is disabled and checked
 * @prop --mds-input-switch-box-color-disabled-unchecked: Set the color of the switch when the switch is disabled and unchecked
 * @prop --mds-input-switch-box-color-unchecked: Set the color of the switch when the switch is unchecked
 * @prop --mds-input-switch-box-padding-sm: Set the padding of the switch toggle's container
 * @prop --mds-input-switch-box-padding-md: Set the padding of the switch toggle's container
 * @prop --mds-input-switch-box-padding-lg: Set the padding of the switch toggle's container
 * @prop --mds-input-switch-toggle-color-checked: Set the color of the switch toggle when the switch is checked
 * @prop --mds-input-switch-toggle-color-disabled-checked: Set the color of the switch toggle when the switch is disabled and checked
 * @prop --mds-input-switch-toggle-color-disabled-unchecked: Set the color of the switch toggle when the switch is disabled and unchecked
 * @prop --mds-input-switch-toggle-color-unchecked: Set the color of the switch toggle when the switch is unchecked
 * @prop --mds-input-switch-toggle-size-sm: Sets the size of the switch toggle
 * @prop --mds-input-switch-toggle-size-md: Sets the size of the switch toggle
 * @prop --mds-input-switch-toggle-size-lg: Sets the size of the switch toggle
 */

:host {

  --mds-input-switch-animation-timing-adjust: 1.4;
  --mds-input-switch-animation-timing-function: theme('transitionTimingFunction.in-out-quad');
  --mds-input-switch-duration: 300ms;
  --mds-input-switch-icon-color-checked-disabled: theme('colors.tone-neutral-06');
  --mds-input-switch-icon-color-checked: theme('colors.variant-primary-04');
  --mds-input-switch-icon-color-indeterminate-disabled: theme('colors.tone-neutral-05');
  --mds-input-switch-icon-color-indeterminate: theme('colors.tone-neutral-05');
  --mds-input-switch-icon-color-unchecked-disabled: theme('colors.tone-neutral-06');
  --mds-input-switch-icon-color-unchecked: theme('colors.tone-neutral-06');
  --mds-input-switch-box-color-checked: theme('colors.variant-primary-04');
  --mds-input-switch-box-color-disabled-checked: theme('colors.tone-neutral-06');
  --mds-input-switch-box-color-disabled-unchecked: theme('colors.tone-neutral-08');
  --mds-input-switch-box-color-unchecked: theme('colors.tone-neutral-07');
  --mds-input-switch-box-padding-sm: theme('spacing.100');
  --mds-input-switch-box-padding-md: theme('spacing.100');
  --mds-input-switch-box-padding-lg: theme('spacing.100');
  --mds-input-switch-toggle-color-checked: theme('colors.tone-neutral');
  --mds-input-switch-toggle-color-disabled-checked: theme('colors.tone-neutral');
  --mds-input-switch-toggle-color-disabled-unchecked: theme('colors.tone-neutral-09');
  --mds-input-switch-toggle-color-unchecked: theme('colors.tone-neutral-10');
  --mds-input-switch-toggle-size-sm: theme('spacing.400');
  --mds-input-switch-toggle-size-md: theme('spacing.600');
  --mds-input-switch-toggle-size-lg: theme('spacing.800');
  --mds-input-switch-icon-explicit-color: var(--mds-input-switch-icon-color-checked);
  --mds-input-switch-toggle-size: var(--mds-input-switch-toggle-size-md);
  --mds-input-switch-toggle-container-size: calc(calc(var(--mds-input-switch-toggle-size-md) * 2) + calc(var(--mds-input-switch-box-padding-md) * 2));
  --mds-input-switch-box-padding: var(--mds-input-switch-box-padding-md);

  @apply gap-200;

  align-items: flex-start;
  display: inline-flex;
}

.field {
  display: none;
}

.label-icon {
  @apply focus-bounce;

  align-items: baseline;
  border-radius: theme('borderRadius.DEFAULT');
  cursor: pointer;
  display: flex;
  position: relative;
  transition-property: outline-offset opacity;
}

.label-icon:focus-visible {
  @apply focus-bounce--focused;
}

.label-text {
  cursor: pointer;
  display: flex;
}

.label-text--empty {
  display: none;
}

:host([type="switch"]) .label-text {
  align-items: center;
  align-self: center;
}

.icon-explicit {
  fill: var(--mds-input-switch-icon-explicit-color);
  height: var(--mds-input-switch-toggle-size);
  width: var(--mds-input-switch-toggle-size);
}

.icon-typography-checked,
.icon-typography-unchecked {
  align-items: center;
  display: inline-flex;
}

.icon-typography-checked {
  @apply
    left-0
    top-0;

  position: absolute;
}

.switch-container {

  @apply
    focus-bounce
    rounded-full;

  align-self: stretch;
  box-sizing: border-box;
  display: flex;
  flex-shrink: 0;
  transition-property: width outline-offset opacity;
  width: var(--mds-input-switch-toggle-container-size);
}

.switch-container:focus-visible {
  @apply focus-bounce--focused;
}

.switch {
  @apply
    rounded-full
    ease-in-out
    duration-200;

  background-color: var(--mds-input-switch-box-color-unchecked);
  box-sizing: border-box;
  display: inline-flex;
  flex-shrink: 0;
  padding: var(--mds-input-switch-box-padding);
  transition-duration: var(--mds-input-switch-duration);
  transition-property: background-color, border-color, box-shadow, color, fill, height, margin, opacity, padding, transform, width;
  width: var(--mds-input-switch-toggle-container-size);
}

.switch-toggle {
  @apply
    ease-linear
    rounded-full
    duration-200;

  align-items: center;
  animation-duration: calc(var(--mds-input-switch-duration) * 1.5);
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
  animation-name: none;
  animation-play-state: paused;
  animation-timing-function: var(--mds-input-switch-animation-timing-function);
  background-color: var(--mds-input-switch-toggle-color-checked);
  box-shadow: theme('boxShadow.DEFAULT');
  cursor: pointer;
  display: flex;
  height: var(--mds-input-switch-toggle-size);
  justify-content: center;
  transition-property: background-color, border-color, box-shadow, color, fill, height, margin, opacity, padding, transform, width;
  width: var(--mds-input-switch-toggle-size);
}

.field:checked + .switch-container .switch {
  background-color: var(--mds-input-switch-box-color-checked);
}

.field:checked + .switch-container .switch-toggle {
  animation-name: check;
  animation-play-state: initial;
  background-color: var(--mds-input-switch-toggle-color-checked);
}

.field:not( :checked ) + .dirty .switch-toggle {
  animation-name: uncheck;
  animation-play-state: initial;
  background-color: var(--mds-input-switch-toggle-color-unchecked);
}

.field:disabled + .switch-container .switch {
  background-color: var(--mds-input-switch-box-color-disabled-unchecked);
}

.field:checked:disabled + .switch-container .switch {
  background-color: var(--mds-input-switch-box-color-disabled-checked);
}

.field:disabled + .switch-container .switch-toggle {
  background-color: var(--mds-input-switch-toggle-color-disabled-unchecked);
}

.field:checked:disabled + .switch-container .switch-toggle {
  background-color: var(--mds-input-switch-toggle-color-disabled-checked);
}

@keyframes check {
  0% {
    transform: translateX(0);
    width: var(--mds-input-switch-toggle-size);
  }

  50% {
    transform: translateX(0);
    width: calc(var(--mds-input-switch-toggle-size) * var(--mds-input-switch-animation-timing-adjust));
  }

  100% {
    transform: translateX(100%);
    width: var(--mds-input-switch-toggle-size);
  }
}

@keyframes uncheck {
  0% {
    transform: translateX(100%);
    width: var(--mds-input-switch-toggle-size);
  }

  50% {
    transform: translateX(0);
    width: calc(var(--mds-input-switch-toggle-size) * var(--mds-input-switch-animation-timing-adjust));
  }

  100% {
    transform: translateX(0);
    width: var(--mds-input-switch-toggle-size);
  }
}

@import './css/mds-input-switch-checkbox.css';
@import './css/mds-input-switch-explicit.css';
@import './css/mds-input-switch-size.css';
@import '../../tailwind/fouc.css';
