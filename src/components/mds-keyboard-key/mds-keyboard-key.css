@tailwind utilities;

/**
 * @prop --mds-keyboard-key-illumination-dark-size: Set the size of the dark illumination of the keyboard key.
 * @prop --mds-keyboard-key-illumination-light-size: Set the size of the light illumination of the keyboard key.
 * @prop --mds-keyboard-key-illumination-dark: Set the dark illumination of the keyboard key.
 * @prop --mds-keyboard-key-illumination-light: Set the light illumination of the keyboard key.
 * @prop --mds-keyboard-key-color: Set the color of the keyboard key.
 * @prop --mds-keyboard-key-direction-color: Set the color of the direction key.
 * @prop --mds-keyboard-key-padding: Set the padding of the keyboard key.
 * @prop --mds-keyboard-key-transition-duration: Set the transition duration of the keyboard key.
 */

:host {

  --mds-keyboard-key-illumination-dark-size: theme('spacing.150');
  --mds-keyboard-key-illumination-light-size: theme('spacing.50');
  --mds-keyboard-key-illumination-dark: 0 calc(var(--mds-keyboard-key-illumination-dark-size) * -1) 0 0 rgb(0 0 0 / var(--mds-keyboard-key-illumination-dark-opacity, 0.05)) inset;
  --mds-keyboard-key-illumination-light: 0 var(--mds-keyboard-key-illumination-light-size) 0 0 rgb(255 255 255 / var(--mds-keyboard-key-illumination-light-opacity, 0.5)) inset;
  --mds-keyboard-key-padding: theme('spacing.100');
  --mds-keyboard-key-transition-duration: theme('transitionDuration.300');

  /* internal */
  --icon-size: theme('size.600');
  --key-size-default: calc(var(--icon-size) + calc(var(--mds-keyboard-key-padding) * 2) + var(--mds-keyboard-key-illumination-dark-size) + var(--mds-keyboard-key-illumination-light-size));
  --key-size-pressed: calc(var(--icon-size) + calc(var(--mds-keyboard-key-padding) * 2) + calc(var(--mds-keyboard-key-illumination-light-size) * 2));

  align-items: flex-end;
  display: inline-flex;
  min-height: var(--key-size-default);
  min-width: var(--key-size-default);
}

.physical-key {
  align-items: baseline;
  background-color: var(--mds-keyboard-key-background, theme('colors.tone-stone-08'));
  border-radius: theme('borderRadius.md');
  box-shadow: var(--mds-keyboard-key-illumination-light), var(--mds-keyboard-key-illumination-dark), var(--mds-keyboard-key-illumination-shadow);
  box-sizing: border-box;
  display: inline-flex;
  flex-grow: 1;
  flex-shrink: 0;
  height: var(--key-size-default);
  justify-content: center;
  min-width: theme('size.1000');
  padding: calc(var(--mds-keyboard-key-illumination-light-size) + var(--mds-keyboard-key-padding)) var(--mds-keyboard-key-padding) calc(var(--mds-keyboard-key-illumination-dark-size) + var(--mds-keyboard-key-padding)) var(--mds-keyboard-key-padding);
  position: relative;
  text-align: center;
  transition-duration: var(--mds-keyboard-key-transition-duration);
  transition-property: box-shadow, padding, height;
  transition-timing-function: theme('transitionTimingFunction.out-expo');
  user-select: none;
}

:host(:active) .physical-key,
:host([pressed]:not([pressed="false"])) .physical-key {

  --mds-keyboard-key-illumination-dark: 0 calc(var(--mds-keyboard-key-illumination-light-size) * -1) 0 0 rgb(0 0 0 / var(--mds-keyboard-key-illumination-dark-opacity)) inset;

  box-shadow: var(--mds-keyboard-key-illumination-light), var(--mds-keyboard-key-illumination-dark), var(--mds-keyboard-key-illumination-shadow);
  height: var(--key-size-pressed);
  padding: calc(var(--mds-keyboard-key-illumination-light-size) + var(--mds-keyboard-key-padding)) var(--mds-keyboard-key-padding) calc(var(--mds-keyboard-key-illumination-light-size) + var(--mds-keyboard-key-padding)) var(--mds-keyboard-key-padding);
}

:host([code="space"]) .physical-key {
  min-width: calc(var(--key-size-default) * 2);
}

mds-badge {
  background-color: transparent;
  color: currentcolor;
  margin-left: theme('margin.50');
  padding: 0;
  white-space: nowrap;
}

.shortcut-icon {
  fill: currentcolor;
}

.shortcut-text {
  color: currentcolor;
  text-transform: capitalize;
  white-space: nowrap;
}

@import '../../tailwind/fouc.css';
